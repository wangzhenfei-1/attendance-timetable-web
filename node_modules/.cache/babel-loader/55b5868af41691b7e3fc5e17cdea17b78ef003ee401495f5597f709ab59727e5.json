{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport function useTimetable() {\n  _s();\n  const [lessons, setLessons] = useState([]);\n  useEffect(() => {\n    const data = localStorage.getItem('timetable');\n    if (data) setLessons(JSON.parse(data));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('timetable', JSON.stringify(lessons));\n  }, [lessons]);\n  const addLesson = lesson => {\n    setLessons(prev => [...prev, lesson]);\n  };\n  const updateLesson = updated => {\n    setLessons(prev => prev.map(l => l.id === updated.id ? updated : l));\n  };\n  const getIndicatorColor = lesson => {\n    const ratio = lesson.absences / lesson.required;\n    if (ratio <= 1 / 3) return 'green';\n    if (ratio <= 2 / 3) return 'orange';\n    if (ratio < 1) return 'red';\n    return 'black';\n  };\n  return {\n    lessons,\n    addLesson,\n    updateLesson,\n    getIndicatorColor\n  };\n}\n_s(useTimetable, \"pygfjuqCS+KExPvW9DgudSWDLpM=\");","map":{"version":3,"names":["useState","useEffect","useTimetable","_s","lessons","setLessons","data","localStorage","getItem","JSON","parse","setItem","stringify","addLesson","lesson","prev","updateLesson","updated","map","l","id","getIndicatorColor","ratio","absences","required"],"sources":["/Users/wangzhenfei/Projects/attendance-timetable-web/src/hooks/useTimetable.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport type Lesson = {\n  id: string;\n  weekday: 0 | 1 | 2 | 3 | 4;\n  period: 1 | 2 | 3 | 4 | 5 | 6;\n  title: string;\n  professor: string;\n  room: string;\n  required: number;\n  color: string;\n  absences: number;\n};\n\nexport function useTimetable() {\n  const [lessons, setLessons] = useState<Lesson[]>([]);\n\n  useEffect(() => {\n    const data = localStorage.getItem('timetable');\n    if (data) setLessons(JSON.parse(data));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('timetable', JSON.stringify(lessons));\n  }, [lessons]);\n\n  const addLesson = (lesson: Lesson) => {\n    setLessons(prev => [...prev, lesson]);\n  };\n\n  const updateLesson = (updated: Lesson) => {\n    setLessons(prev =>\n      prev.map(l => (l.id === updated.id ? updated : l))\n    );\n  };\n\n  const getIndicatorColor = (lesson: Lesson) => {\n    const ratio = lesson.absences / lesson.required;\n    if (ratio <= 1/3) return 'green';\n    if (ratio <= 2/3) return 'orange';\n    if (ratio < 1)    return 'red';\n    return 'black';\n  };\n\n  return { lessons, addLesson, updateLesson, getIndicatorColor };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAc3C,OAAO,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAW,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMK,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC9C,IAAIF,IAAI,EAAED,UAAU,CAACI,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAENL,SAAS,CAAC,MAAM;IACdM,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACR,OAAO,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,MAAMS,SAAS,GAAIC,MAAc,IAAK;IACpCT,UAAU,CAACU,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,MAAM,CAAC,CAAC;EACvC,CAAC;EAED,MAAME,YAAY,GAAIC,OAAe,IAAK;IACxCZ,UAAU,CAACU,IAAI,IACbA,IAAI,CAACG,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,GAAGH,OAAO,GAAGE,CAAE,CACnD,CAAC;EACH,CAAC;EAED,MAAME,iBAAiB,GAAIP,MAAc,IAAK;IAC5C,MAAMQ,KAAK,GAAGR,MAAM,CAACS,QAAQ,GAAGT,MAAM,CAACU,QAAQ;IAC/C,IAAIF,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,OAAO,OAAO;IAChC,IAAIA,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,OAAO,QAAQ;IACjC,IAAIA,KAAK,GAAG,CAAC,EAAK,OAAO,KAAK;IAC9B,OAAO,OAAO;EAChB,CAAC;EAED,OAAO;IAAElB,OAAO;IAAES,SAAS;IAAEG,YAAY;IAAEK;EAAkB,CAAC;AAChE;AAAClB,EAAA,CA/BeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}